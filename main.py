# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'dbsetup1.2.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from importlib.util import set_loader
from tkinter import Label
from xml.etree.ElementTree import tostring
from PyQt5 import QtCore, QtGui, QtWidgets
from dbsu import Ui_dbSetUpDialoge
from mainViewModel import datamodel
from addRow import Ui_Dialog
from createTable import Create_Table

class Ui_MainWindow(object):

    def __init__(self):
            super().__init__()
            self.data = datamodel()

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.setEnabled(True)
        MainWindow.resize(931, 470)
        MainWindow.setCursor(QtGui.QCursor(QtCore.Qt.ArrowCursor))
        MainWindow.setMouseTracking(False)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout_2.setContentsMargins(-1, -1, 30, -1)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout()
        self.verticalLayout_2.setContentsMargins(30, 50, 30, 30)
        self.verticalLayout_2.setSpacing(0)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setSizeConstraint(QtWidgets.QLayout.SetMinAndMaxSize)
        self.verticalLayout.setObjectName("verticalLayout")
        self.dbsetupButton = QtWidgets.QPushButton(self.centralwidget)
        self.dbsetupButton.setMaximumSize(QtCore.QSize(300, 16777215))
        self.dbsetupButton.setObjectName("dbsetupButton")
        self.verticalLayout.addWidget(self.dbsetupButton)
        self.exinButton = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.exinButton.sizePolicy().hasHeightForWidth())
        self.exinButton.setSizePolicy(sizePolicy)
        self.exinButton.setMaximumSize(QtCore.QSize(300, 16777215))
        self.exinButton.setCheckable(False)
        self.exinButton.setObjectName("exinButton")
        self.verticalLayout.addWidget(self.exinButton)
        self.createTableButton = QtWidgets.QPushButton(self.centralwidget)
        self.createTableButton.setMaximumSize(QtCore.QSize(300, 16777215))
        self.createTableButton.setObjectName("createTableButton")
        self.verticalLayout.addWidget(self.createTableButton)
        self.verticalLayout_2.addLayout(self.verticalLayout)
        spacerItem = QtWidgets.QSpacerItem(31, 100, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        self.verticalLayout_2.addItem(spacerItem)
        self.treeWidget = QtWidgets.QTreeWidget(self.centralwidget)
        self.treeWidget.setMaximumSize(QtCore.QSize(300, 16777215))
        self.treeWidget.setObjectName("treeWidget")
        self.treeWidget.headerItem().setText(0, "1")
        self.verticalLayout_2.addWidget(self.treeWidget)
        self.horizontalLayout.addLayout(self.verticalLayout_2)
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tabWidget.sizePolicy().hasHeightForWidth())
        self.tabWidget.setSizePolicy(sizePolicy)
        self.tabWidget.setObjectName("tabWidget")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.tab)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.gridLayout = QtWidgets.QGridLayout()
        self.gridLayout.setObjectName("gridLayout")
        self.tableComboBox = QtWidgets.QComboBox(self.tab)
        self.tableComboBox.setObjectName("tableComboBox")
        self.tableComboBox.setSizeAdjustPolicy(QtWidgets.QComboBox.SizeAdjustPolicy.AdjustToContents)
        self.gridLayout.addWidget(self.tableComboBox, 0, 2, 1, 1)
        self.tableWidget = QtWidgets.QTableWidget(self.tab)
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(2)
        self.tableWidget.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(1, item)
        self.gridLayout.addWidget(self.tableWidget, 1, 0, 1, 4)
        self.pushButton_5 = QtWidgets.QPushButton(self.tab)
        self.pushButton_5.setObjectName("pushButton_5")
        self.gridLayout.addWidget(self.pushButton_5, 0, 3, 1, 1)
        # 
        self.addRowButton = QtWidgets.QPushButton(self.tab)
        self.addRowButton.setObjectName("addRowButton")
        self.gridLayout.addWidget(self.addRowButton, 2, 3, 1, 1)

        self.delButton = QtWidgets.QPushButton(self.tab)
        self.delButton.setObjectName("delButton")
        self.gridLayout.addWidget(self.delButton, 2, 2, 1, 1)
        self.delButton.setEnabled(False)

        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem1, 0, 0, 1, 1)
        self.schemaComboBox = QtWidgets.QComboBox(self.tab)
        self.schemaComboBox.setObjectName("schemaComboBox")
        self.schemaComboBox.setSizeAdjustPolicy(QtWidgets.QComboBox.SizeAdjustPolicy.AdjustToContents)
        self.gridLayout.addWidget(self.schemaComboBox, 0, 1, 1, 1)
        self.gridLayout_3.addLayout(self.gridLayout, 0, 0, 1, 1)
        self.tabWidget.addTab(self.tab, "")
        self.horizontalLayout.addWidget(self.tabWidget)
        self.gridLayout_2.addLayout(self.horizontalLayout, 0, 0, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menuBar = QtWidgets.QMenuBar(MainWindow)
        self.menuBar.setGeometry(QtCore.QRect(0, 0, 931, 26))
        self.menuBar.setObjectName("menuBar")
        self.menuFile = QtWidgets.QMenu(self.menuBar)
        self.menuFile.setObjectName("menuFile")
        self.menuSettings = QtWidgets.QMenu(self.menuBar)
        self.menuSettings.setObjectName("menuSettings")
        self.menuSQL_quety = QtWidgets.QMenu(self.menuBar)
        self.menuSQL_quety.setObjectName("menuSQL_quety")
        MainWindow.setMenuBar(self.menuBar)
        self.actionOpen_file = QtWidgets.QAction(MainWindow)
        self.actionOpen_file.setObjectName("actionOpen_file")
        self.actionOpen_recent = QtWidgets.QAction(MainWindow)
        self.actionOpen_recent.setObjectName("actionOpen_recent")
        self.actionSave_file = QtWidgets.QAction(MainWindow)
        self.actionSave_file.setObjectName("actionSave_file")
        self.actionCreate_new_query = QtWidgets.QAction(MainWindow)
        self.actionCreate_new_query.setObjectName("actionCreate_new_query")
        self.actionRun = QtWidgets.QAction(MainWindow)
        self.actionRun.setObjectName("actionRun")
        self.menuFile.addAction(self.actionOpen_file)
        self.menuFile.addAction(self.actionOpen_recent)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionSave_file)
        self.menuSQL_quety.addAction(self.actionCreate_new_query)
        self.menuSQL_quety.addAction(self.actionRun)
        self.menuBar.addAction(self.menuFile.menuAction())
        self.menuBar.addAction(self.menuSettings.menuAction())
        self.menuBar.addAction(self.menuSQL_quety.menuAction())

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.dbsetupButton.setText(_translate("MainWindow", "DB setup"))
        self.exinButton.setText(_translate("MainWindow", "Export/Import "))
        self.createTableButton.setText(_translate("MainWindow", "Create new table "))
        item = self.tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "a"))
        item = self.tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "b"))
        self.pushButton_5.setText(_translate("MainWindow", "Filter"))
        self.addRowButton.setText(_translate("MainWindow", "Add Row"))
        self.delButton.setText(_translate("MainWindow", "Delete Row"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("MainWindow", "Tab 1"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.menuSettings.setTitle(_translate("MainWindow", "Settings"))
        self.menuSQL_quety.setTitle(_translate("MainWindow", "SQL query"))
        self.actionOpen_file.setText(_translate("MainWindow", "Open file"))
        self.actionOpen_recent.setText(_translate("MainWindow", "Open recent"))
        self.actionSave_file.setText(_translate("MainWindow", "Save file"))
        self.actionCreate_new_query.setText(_translate("MainWindow", "Create new query file"))
        self.actionRun.setText(_translate("MainWindow", "Run"))

    def setUpbuttons(self):
        self.dbsetupButton.clicked.connect(self.godbSetUp)
        self.schemaComboBox.currentTextChanged.connect(self.updateFilter2)
        self.tableComboBox.currentTextChanged.connect(self.updateFilter)
        self.addRowButton.clicked.connect(self.addRow)
        self.delButton.clicked.connect(self.delRow)
        self.actionCreate_new_query.triggered.connect(self.createNewQuery)
        self.createTableButton.clicked.connect(self.createTabe)
    

    def createTabe(self):

        self.window = QtWidgets.QDialog()
        self.ui = Create_Table(self.data)
        self.ui.setupUi(self.window)
        self.window.show()
        self.window.exec_()


    def createNewQuery(self):
        print("fefwefs")
        newTab = QtWidgets.QWidget()
        newTab.setObjectName("tab")
        gridLayout_4 = QtWidgets.QGridLayout(newTab)
        gridLayout_4.setObjectName("gridLayout_4")
        closeButton = QtWidgets.QPushButton(newTab)
        closeButton.setObjectName("addRowButton")
        gridLayout_4.addWidget(closeButton, 0, 4, 1, 1)
        runButton = QtWidgets.QPushButton(newTab)
        runButton.setObjectName("runButton")
        gridLayout_4.addWidget(runButton, 0, 2, 1, 1)
        label = QtWidgets.QTextEdit(newTab)
        label.setObjectName("label")
        label.setText("Output: ")
        gridLayout_4.addWidget(label, 6, 0, 2, 5)
        SQLLineEdit = QtWidgets.QTextEdit(newTab)
        font = QtGui.QFont()
        font.setPointSize(10)
        SQLLineEdit.setFont(font)
        SQLLineEdit.setPlaceholderText("")
        SQLLineEdit.setObjectName("SQLLineEdit")
        SQLLineEdit.setMinimumSize(100,400)
        gridLayout_4.addWidget(SQLLineEdit, 1, 0, 5, 5)
        self.tabWidget.addTab(newTab, "")
        self.tabWidget.setTabText(self.tabWidget.indexOf(newTab),(f"Tab {self.tabWidget.indexOf(newTab)+1}"))
        closeButton.clicked.connect(self.closeCurTab)
        runButton.clicked.connect(lambda : self.runQuery(SQLLineEdit.toPlainText(),label))
        closeButton.setText("Close")
        runButton.setText("Run")

    def runQuery(self ,value,label):
        print(value)
        msg = self.data.runQuery(self.data.cursor,value)
        label.setText(str(msg))

    def closeCurTab(self):
        self.tabWidget.removeTab(self.tabWidget.currentIndex())

    def delRow(self):
        if self.data.currRowPick != -1:
            msg = self.data.deleteVal(self.data.cursor,self.data.currRowPick)
            if msg is not None:
                QtWidgets.QMessageBox.about(MainWindow, "Error", msg)
            self.updateTable(self.data.currTable)


    def addRow(self):
        if self.data.currTable != "":
            self.addRowDial = QtWidgets.QDialog()
            self.ui = Ui_Dialog((self.data, self.data.listOfColumns))
            self.ui.setupUi(self.addRowDial)
            self.addRowDial.show()
            self.addRowDial.exec_()
            if self.addRowDial.result() != 0:
                self.updateTable(self.data.currTable)


    def updateFilter(self,val):
        if val != "":
            self.updateTable(val)

    def updateFilter2(self,val):
        if val != "":
            self.updateTablesCheckBox(val)


    def godbSetUp(self):

        self.window = QtWidgets.QDialog()
        self.ui = Ui_dbSetUpDialoge(self.data)
        self.ui.setupUi(self.window)
        self.window.show()
        self.window.exec_()
        # data fill 
        self.data.username = self.ui.userLineEdit.text()
        self.data.password = self.ui.passLineEdit.text()
        self.data.host = self.ui.hostLineEdit.text()
        self.data.port = self.ui.portLineEdit.text()
        # 
        if self.data.chekCon():
            QtWidgets.QMessageBox.about(MainWindow, "Done", "Connection!")
            self.reloadUi()
        else:
            QtWidgets.QMessageBox.about(MainWindow, "Error", "Fali")
        


    def reloadUi(self):
        self.reloadCheckboxes()

    def reloadCheckboxes(self):
        self.schemaComboBox.clear()
        self.tableComboBox.clear()
        self.data.loadSchemas(self.data.cursor)

        for x in self.data.listOfSchemas:
            self.schemaComboBox.addItem(x[0])
        self.data.loadTables(self.data.cursor,self.data.listOfSchemas[0][0])

    def updateTablesCheckBox (self, schema):
        self.data.currSchema = schema
        self.tableComboBox.clear()
        self.data.loadTables(self.data.cursor,schema)
        for x in self.data.listOfTables:
            self.tableComboBox.addItem(x[0])
        self.updateTable(self.data.listOfTables[0][0])

    def updateTable(self, table):
        self.data.currTable = table
        self.data.loadTableColumns(self.data.cursor,table)
        self.data.loadTableContent(self.data.cursor,table)

        if len(self.data.listOfContent) != 0:
            newtable = QtWidgets.QTableWidget(0,len(self.data.listOfContent[0]))
        else:
            newtable = QtWidgets.QTableWidget(0,len(self.data.listOfColumns))

        newtable.horizontalHeader().setCascadingSectionResizes(True)
        newtable.horizontalHeader().sectionResizeMode(QtWidgets.QHeaderView.Interactive)


        newtable.setHorizontalHeaderLabels(map(lambda x : x[0],self.data.listOfColumns))

        for row, form in enumerate(self.data.listOfContent):
            newtable.insertRow(row)
            for column, item in enumerate(form):
                newtable.setItem(row, column, QtWidgets.QTableWidgetItem(str(item)))

        newtable.resizeColumnsToContents()
        newtable.itemChanged.connect(self.signal)
        newtable.itemSelectionChanged.connect(self.currItem)
        self.tableWidget = newtable
        self.gridLayout.addWidget(newtable, 1, 0, 1, 4)

    def currItem(self):
        list = self.tableWidget.selectedItems()
        if len(list) == 1:
            print(list[0].row())
            self.data.currRowPick = list[0].row()
            self.delButton.setEnabled(True)
        else:
            self.delButton.setEnabled(False)


    def signal(self,value):
        print(value.row())
        print(value.column())
        print(value.text())
        msg = self.data.updateVal(self.data.cursor,(value.text(),value.row(),value.column()))
        if msg is not None:
            QtWidgets.QMessageBox.about(MainWindow, "Error", msg)
            self.updateTable(self.data.currTable)


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    ui.setUpbuttons()
    MainWindow.show()
    sys.exit(app.exec_())
